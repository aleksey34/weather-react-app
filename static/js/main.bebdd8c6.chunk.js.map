{"version":3,"sources":["assets/images/loader.gif","components/auth/LoginForm/LoginFormError/index.js","components/auth/LoginForm/index.js","store/actions/userAuth/changeUserLoginStringAction.js","store/constants/userAuth/userAuthSetActionType.js","store/actions/userAuth/changeUserPasswordStringAction.js","store/initialState/UserAuthInitialState/index.js","store/actions/userAuth/asyncSetUserLoginAction.js","helpers/cookie/cookies_fun.js","store/actions/userAuth/setLoginErrorAction.js","helpers/validate/validateStr.js","containers/auth/LoginFormContainer/index.js","components/auth/RegisterForm/index.js","containers/auth/RegisterFormContainer/index.js","components/Navbar/index.js","store/actions/userAuth/asyncSetLogoutUserAction.js","containers/NavbarContainer/index.js","components/pages-part/Header/index.js","components/pages-part/Footer/index.js","components/pages-part/Sidebar/index.js","components/pages/FrontPage/index.js","components/Info/index.js","containers/InfoContainer/index.js","components/FormCities/index.js","store/actions/weather/setWeatherIsLoadingDataAction.js","store/constants/weather/weatherSetActionType.js","store/actions/weather/setWeaterErrorAction.js","store/actions/weather/setWeatherChangeCurrentQueryCityStringAction.js","store/initialState/WeatherinitialState/index.js","store/actions/weather/asyncSetWeatherAction.js","data/cities/citiesList.js","data/auth/weatherKey.js","containers/FormCitiesContainer/index.js","components/WeatherInfo/index.js","containers/WeatherInfoContainer/index.js","components/pages/WeatherPage/index.js","components/BlogPost/index.js","components/pages/BlogPage/index.js","store/actions/blogPost/asyncSetBlogPostAction.js","store/constants/endPoints/index.js","store/constants/blog/blogPostActionType.js","store/actions/blogPost/setIsPostLoadingErrorAction.js","store/actions/blogPost/setIsPostDataLoadingAction.js","store/actions/users/asyncSetAllUsersAction.js","store/constants/users/usesActionType.js","containers/blog/BlogPageContainer/index.js","components/pages/BlogSinglePost/index.js","containers/blog/BlogSinglePostContainer/index.js","components/pages-part/Main/index.js","App.js","serviceWorker.js","store/reducers/weatherReducer/weatherReducer.js","store/reducers/blogReducer/blogPostReducer.js","store/reducers/index.js","store/reducers/userAuthReducer/userAuthReducer.js","store/reducers/usersReducer/usersReducer.js","store/store.js","index.js"],"names":["module","exports","LoginFormError","errorData","length","map","element","index","key","className","LoginForm","userAuthData","setNewLoginString","setNewPasswordString","setLogin","validateError","onSubmit","event","preventDefault","loginError","value","login","onChange","newLogin","target","type","placeholder","password","newPassword","changeUserLoginStringAction","newUserNameString","payload","changeUserPasswordStringAction","newUserPasswordString","userAuthInitialState","isUserAuth","userName","confirmPassword","email","userRole","authToken","demoUserAuthData","asyncSetUserLoginAction","setLoginErrorAction","userAuthDataJson","cookie_name","results","document","cookie","match","unescape","get_cookie","userAuthDataObj","JSON","parse","demoUser","current_date","Date","cookie_year","getFullYear","cookie_month","getMonth","cookie_day","getDate","name","exp_y","exp_m","exp_d","path","domain","secure","cookie_string","escape","toGMTString","set_cookie","stringify","dispatch","validateStr","str","fieldTitle","min","max","LoginFormContainer","props","newUserLoginString","setState","trim","passwordError","state","this","setLogout","Component","connect","bindActionCreators","RegisterForm","RegisterFormContainer","Navbar","exact","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","href","role","aria-haspopup","aria-labelledby","style","width","aria-selected","onClick","asyncSetLogoutUserAction","cookie_date","setTime","getTime","delete_cookie","NavbarContainer","Header","Footer","Sidebar","FrontPage","Info","weather","city","InfoContainer","weatherData","error","FormCities","setWeather","setCityString","currentQueryCityString","isDataLoading","elements","disabled","setWeatherIsLoadingDataAction","isLoadingData","setWeatherErrorAction","setWeatherChangeCurrentQueryCityStringAction","emptyWeatherData","country","sunrise","sunset","pressure","temp","WeatherInitialState","timeData","data","getHours","getMinutes","getSeconds","asyncSetWeatherAction","currentCity","queryUrl","axios","get","then","response","cod","sys","main","Math","round","catch","console","log","CITIES_LIST","API_KEY","FormCitiesContainer","cityNameString","setWeatherApi","existCity","filter","el","toUpperCase","WeatherInfo","height","src","Loader","alt","WeatherInfoContainer","WeatherPage","BlogPost","user","title","rendered","thumbnailData","media_details","sizes","medium","source_url","date","dangerouslySetInnerHTML","__html","excerpt","link","BlogPage","getUpdateUsersAndPostData","allUsersData","postLoadingError","isPostDataLoading","imgLoader","postsData","currentAuthorId","author","currentUser","config","headers","btoa","username","asyncSetBlogPostAction","setIsPostDataLoadingAction","setPostLoadingErrorAction","res","a","queryResult","i","_links","queryPathThumbnail","result","getAdditionalData","postLoadingErrorString","basicAuth","asyncSetAllUsersAction","BlogPageContainer","getWpApiUsersAndBlogPostData","bind","blogPostData","BlogSinglePost","postData","getUser","post","users","content","BlogSinglePostContainer","getPostId","window","location","pathname","split","Number","getPost","postArr","Main","render","App","Boolean","hostname","initialState","combineReducersAll","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,oC,0jBCgB5BC,G,YAbQ,SAAC,GAAoB,IAAjBC,EAAgB,EAAhBA,UACvB,OAAIA,EAAUC,OAILD,EAAUE,KAAK,SAACC,EAAUC,GACvB,OAAU,yBAAKC,IAAKD,EAAOE,UAAU,eAAgBH,MAJrD,KCkCDI,EApCG,SAAC,GAMZ,IANeC,EAMhB,EANgBA,aACGC,EAKnB,EALmBA,kBACAC,EAInB,EAJmBA,qBACAC,EAGnB,EAHmBA,SACAC,EAEnB,EAFmBA,cAkBrB,OACI,0BAAMC,SAfiB,SAAAC,GACvBA,EAAMC,iBACNJ,KAaoCL,UAAU,OAG1C,kBAAC,EAAD,CAAiBN,UAAS,sBAAQY,GAAR,CAAwBJ,EAAaQ,eAC/D,2BAAOC,MAAQT,EAAaU,MAAQC,SAdjB,SAAAL,GACvB,IAAIM,EAAWN,EAAMO,OAAOJ,MAC5BR,EAAkBW,IAYsDd,UAAU,6BAA6BgB,KAAK,OAAOC,YAAY,UACnI,2BAAON,MAAQT,EAAagB,SAAWL,SAXjB,SAAAL,GAC1B,IAAIW,EAAcX,EAAMO,OAAOJ,MAC/BP,EAAqBe,IASyDnB,UAAU,6BAA6BgB,KAAK,WAAWC,YAAY,aAC7I,yBAAKjB,UAAU,qBACf,4BAAQA,UAAU,oBAAlB,8B,OCxBIoB,EAPoB,SAAAC,GAEhC,MAAO,CACHL,KCHgC,2BDIhCM,QAASD,IEGDE,EAPwB,SAAAC,GAEpC,MAAO,CACHR,KDFmC,8BCGnCM,QAASE,I,OCNFC,EAAsB,CACjCb,MAAO,GACPM,SAAU,GACVQ,YAAY,EACZC,SAAS,GACTC,gBAAiB,GACjBC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXrB,WAAY,ICDVsB,EAAmB,CACrBpB,MAAO,OACPM,SAAU,MACVQ,YAAY,EACZC,SAAS,OACTC,gBAAiB,GACjBC,MAAO,gBACPC,SAAU,GACVC,UAAW,aACXrB,WAAY,IAuDAuB,EApDgB,SAACC,EAAqBhC,GAClDgC,EAAoB,IAEpB,IAAIC,ECImB,SAAUC,GAEjC,IAAIC,EAAUC,SAASC,OAAOC,MAAQ,UAAYJ,EAAc,iBAEhE,OAAKC,EACQI,SAAWJ,EAAQ,IAErB,KDXYK,CAAW,gBAE9B9B,EAAQ,GACRM,EAAU,GAEd,GAAGiB,EAAiB,CAChB,IAAIQ,EAAmBC,KAAKC,MAAMV,GAElCvB,EAAQ+B,EAAgB/B,MAAQ+B,EAAgB/B,MAAQ,GACxDM,EAAWyB,EAAgBzB,SAAWyB,EAAgBzB,SAAW,QAGjEN,EAAQV,EAAaU,MACrBM,EAAYhB,EAAagB,SAEzB,GAAGN,GAASM,EAAS,CAIjB,IAAI4B,GAAW,EAOf,GALGlC,IAAUoB,EAAiBpB,OAC1BM,IAAac,EAAiBd,WAC9B4B,EAAWd,GAGXc,EAKE,CACF,IAAIC,EAAe,IAAIC,KACnBC,EAAcF,EAAaG,cAC3BC,EAAeJ,EAAaK,WAC5BC,EAAaN,EAAaO,UAAY,EAI1C,OC9DU,SAAYC,EAAM5C,EAAO6C,EAAOC,EAAOC,EAAOC,EAAMC,EAAQC,GAElF,IAAIC,EAAgBP,EAAO,IAAMQ,OAASpD,GAErC6C,IAGDM,GAAiB,aADH,IAAId,KAAOQ,EAAOC,EAAOC,GACCM,eAGvCL,IACDG,GAAiB,UAAYC,OAASJ,IAErCC,IACDE,GAAiB,YAAcC,OAASH,IAEvCC,IACDC,GAAiB,YAErBxB,SAASC,OAASuB,EDyCNG,CAAW,eAAgBrB,KAAKsB,UAAUpB,GAAWG,EAAaE,EAAcE,GAEzE,SAAAc,GACHA,EAAS,CAACnD,KH/DH,aG+DqBM,QAAQ,eAAMwB,EAAP,CAAkBpB,YAAY,OAZrE,OAAO,SAAAyC,GACHA,EAAS,CAACnD,KHpDH,aGoDqBM,QAAQ,eAAMG,EAAP,CAA6Bf,WAAY,qBAepF,OAAO,SAAAyD,GACHA,EAAS,CAACnD,KHpEC,aGoEiBM,QAASG,ME3DrCS,EAPY,SAAAxB,GAExB,MAAO,CACHM,KLDwB,kBKExBM,QAASZ,ICNH0D,EAAc,SAACC,GAA4C,IAAtCC,EAAqC,uDAA1B,QAASC,EAAiB,uDAAb,EAAGC,EAAU,uDAAN,GAC9D,OAAIH,EAAI1E,OAAS,EACP,GAAN,OAAW2E,EAAX,sBAAmCC,EAAnC,YAEGF,EAAI1E,OAAS,GACN,GAAN,OAAY2E,EAAZ,sBAAoCE,EAApC,YAEO,ICGbC,E,YAEF,WAAaC,GAAQ,IAAD,8BAChB,4CAAMA,KAmBVvE,kBAAqB,SAAAwE,GACb,EAAKC,SAAS,CAAClE,WAAW,GAAD,OAAK0D,EAAYO,EAAoB,QAAU,EAAI,OAEjF,EAAKD,MAAMtD,4BAA4BuD,EAAmBE,SAvBzC,EA0BpBzE,qBAAuB,SAAAoB,GACnB,EAAKoD,SAAS,CAAEE,cAAc,GAAD,OAAKV,EAAY5C,EAAuB,WAAW,EAAI,OAEpF,EAAKkD,MAAMnD,+BAA+BC,EAAsBqD,SA7BhD,EAgCpBxE,SAAW,WAEP,OAAG,EAAKqE,MAAMxE,aAAawB,cAGxB,EAAKqD,MAAMrE,aAAc,EAAKqE,MAAMD,oBAIvC,EAAKJ,MAAMzC,wBAAwB,EAAKyC,MAAMxC,oBAC1C,EAAKwC,MAAMxE,gBAxCf,EAAK6E,MAAQ,CACTrE,WAAY,GACZoE,cAAe,IAJH,E,sEA8ChB,OACI,kBAAC,EAAD,CACI5E,aAAc8E,KAAKN,MAAMxE,aACzBC,kBAAmB6E,KAAK7E,kBACxBC,qBAAsB4E,KAAK5E,qBAC3BC,SAAU2E,KAAK3E,SACf4E,UAAWD,KAAKC,UAChB3E,cAAgB,CAAC0E,KAAKD,MAAMrE,WAAasE,KAAKD,MAAMD,qB,GAvDnCI,aAyElBC,mBAbf,SAAyBJ,GACrB,MAAM,CACF7E,aAAc6E,EAAM7E,iBAG5B,SAA4BiE,GAC5B,OAAOiB,YAAoB,CACvBhE,8BACAG,iCACAU,0BACAC,uBACFiC,KAEagB,CAA6CV,G,MC9D7CY,MAnBf,WAMI,OACI,0BAAM9E,SANoB,SAAAC,GAC1BA,EAAMC,kBAKiCT,UAAU,OAC7C,2BAAOA,UAAU,6BAA6BgB,KAAK,OAAQC,YAAY,UACvE,2BAAOjB,UAAU,6BAA6BgB,KAAK,OAASC,YAAY,SACxE,2BAAOjB,UAAU,6BAA6BgB,KAAK,QAASC,YAAY,UACxE,2BAAOjB,UAAU,6BAA6BgB,KAAK,WAAYC,YAAY,aAC3E,yBAAKjB,UAAU,qBACf,4BAAQA,UAAU,mBAAlB,kHCRGsF,MALf,WACI,OACG,kBAAC,EAAD,O,MCuGQC,MArGf,YAAgD,IAA7BrF,EAA4B,EAA5BA,aAAe+E,EAAa,EAAbA,UAM9B,OACI,yBAAKjF,UAAU,UACX,yBAAKA,UAAU,iDACX,kBAAC,IAAD,CAASA,UAAU,sBAAsBwF,OAAK,EAACC,GAAG,KAAlD,QACA,4BAAQzF,UAAU,iBAAiBgB,KAAK,SAAS0E,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,qBACrC,0BAAM9F,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2B+F,GAAG,0BACzC,wBAAI/F,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASyF,GAAE,IAAQD,OAAK,EAACQ,gBAAgB,SAAShG,UAAU,YAA5D,eAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASyF,GAAE,SAAaD,OAAK,EAACQ,gBAAgB,SAAShG,UAAU,YAAjE,SAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASyF,GAAE,YAAiBO,gBAAgB,SAAShG,UAAU,YAA/D,aAGDE,EAAawB,YAChB,oCACA,wBAAI1B,UAAU,qBACV,uBAAGA,UAAU,2BAA2BiG,KAAK,IAAIF,GAAG,iBAAiBG,KAAK,SACvER,cAAY,WAAWS,gBAAc,OAAON,gBAAc,SAD7D,kCAIA,yBAAK7F,UAAU,mCAAoCoG,kBAAgB,kBACnE,kBAAC,EAAD,QAGJ,wBAAIpG,UAAU,qBACV,uBAAGA,UAAU,2BAA2BiG,KAAK,IAAIF,GAAG,iBAAiBG,KAAK,SACvER,cAAY,WAAWS,gBAAc,OAAON,gBAAc,SAD7D,sEAIA,yBAAK7F,UAAU,mCAAmCoG,kBAAgB,kBAClE,kBAAC,EAAD,SAKJ,wBAAIpG,UAAU,qBACV,uBAAGA,UAAU,2BAA2BiG,KAAK,IAAIF,GAAG,iBAAiBG,KAAK,SACvER,cAAY,WAAWS,gBAAc,OAAON,gBAAc,SAD7D,SAIA,yBAAKQ,MAAQ,CAACC,MAAM,SAAWtG,UAAU,mCAAmCoG,kBAAgB,kBACxF,yBAAOpG,UAAU,mBACb,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAe+F,GAAG,QAAQG,KAAK,WACzC,wBAAIlG,UAAU,YACV,uBAAGA,UAAU,kBAAkB+F,GAAG,YAAYL,cAAY,MAAMO,KAAK,SAClEC,KAAK,MAAMN,gBAAc,QAAQW,gBAAc,QADlD,UAGJ,wBAAIvG,UAAU,YACV,uBAAGA,UAAU,WAAW+F,GAAG,YAAYL,cAAY,MAAMO,KAAK,SAC3DC,KAAK,MAAMN,gBAAc,QAAQW,gBAAc,SADlD,WAIR,yBAAKvG,UAAU,cAAc+F,GAAG,gBAC5B,yBAAK/F,UAAU,4BAA4B+F,GAAG,QAAQG,KAAK,WACtDE,kBAAgB,aACjB,kBAAC,EAAD,OAEJ,yBAAKpG,UAAU,gBAAgB+F,GAAG,QAAQG,KAAK,WAC1CE,kBAAgB,aACjB,kBAAC,EAAD,cAShC,6BACG,0BAAMpG,UAAU,qBACTE,EAAawB,YAAcxB,EAAayB,UAC3C,oCACI,8BAAQzB,EAAayB,UACrB,uBAAG6E,QAxFH,WACvBvB,KAuFuDjF,UAAU,sDCtFzDyG,EAPkB,WAE9B,OPgB2B,SAAYrE,GAEvC,IAAIsE,EAAc,IAAI1D,KACtB0D,EAAYC,QAAUD,EAAYE,UAAY,GAC9CtE,SAASC,OAASH,GAAe,cAAgBsE,EAAY1C,cOrB7D6C,CAAc,gBACP,CACH7F,KXLoB,cWMpBM,SAAS,ICAXwF,E,2MAEF7B,UAAY,WACR,EAAKP,MAAM+B,4B,wEAKX,OACI,kBAAC,EAAD,CACIvG,aAAc8E,KAAKN,MAAMxE,aACzB+E,UAAWD,KAAKC,gB,GAXFC,aA4BdC,eAXQ,SAAAJ,GACxB,MAAO,CACH7E,aAAc6E,EAAM7E,iBAGG,SAAAiE,GACvB,OAAOiB,YAAoB,CACvBqB,4BACFtC,KAGUgB,CAA+C2B,GCvBhDC,EARA,WACX,OACI,yBAAK/G,UAAU,UACX,kBAAC,EAAD,QCKGgH,G,MARA,WACX,OACI,yBAAKhH,UAAU,UAAf,oBCMOiH,G,MARC,WACZ,OACI,yBAAKjH,UAAU,YAAf,qBCKOkH,G,MAPI,WACf,OACI,yBAAKlH,UAAU,aACX,qD,YCIGmH,MATf,YAA0C,IAAzBC,EAAwB,EAAxBA,QAAU1H,EAAc,EAAdA,UACvB,OACI,yBAAKM,UAAU,QACX,iIACIoH,EAAQC,OAAS3H,GAAiB,iCAAM,4JAA+B0H,EAAQC,OACjF3H,GAAa,iCAAM,4BAAMA,MCHjC4H,E,iLAGE,OACK,kBAAC,EAAD,CACI5H,UAAWsF,KAAKN,MAAMhF,UACtB0H,QAASpC,KAAKN,MAAM6C,YAAYH,c,GANrBlC,aAgBZC,mBANhB,SAA4BJ,GAC1B,MAAO,CACLwC,YAAaxC,EAAMwC,YACnB7H,UAAWqF,EAAMwC,YAAYC,SAGjBrC,CAAyBmC,GCc1BG,G,MA/BI,SAAC,GAMT,IAJHC,EAIE,EAJFA,WACAC,EAGE,EAHFA,cACAC,EAEE,EAFFA,uBACAC,EACE,EADFA,cAgBJ,OACI,yBAAK7H,UAAU,cACX,+GACA,0BAAMO,SAjBY,SAACC,GACvBA,EAAMC,iBAGFoH,IACAH,IACAlH,EAAMO,OAAO+G,SAAST,KAAK1G,MAAOiH,IAWC5H,UAAU,oBACzC,2BAAO+H,SAAUF,EAAgBlH,MAAOiH,EAAwB/G,SAR7C,SAAAL,GAC3BmH,EAAcnH,EAAMO,OAAOJ,QAO+EK,KAAK,OAAOuC,KAAK,OAAOtC,YAAY,4EAAgBjB,UAAU,iBAChK,4BAAQ+H,SAAUF,EAAe7H,UAAU,yCAA3C,6FCrBCgI,EAPsB,SAAAC,GAEnC,MAAO,CACHjH,KCJ+B,yBDK/BM,QAAS2G,IEGAC,EAPc,SAAAxI,GAE3B,MAAO,CACHsB,KDH0B,oBCI1BM,QAAS5B,ICGDyI,EAPsC,SAAAP,GAElD,MAAO,CACH5G,KFFqD,+CEGrDM,QAASsG,ICLNQ,EAAkB,CACzBf,KAAM,GACNgB,QAAQ,GACRC,QAAS,GACTC,OAAQ,GACRC,SAAU,GACVC,KAAM,IAEGC,EAAsB,CAC/BtB,QAASgB,EACTZ,MAAO,GACPK,eAAe,EACfD,uBAAwB,I,iBCRrBtE,EAAU,SAAAqF,GACb,IAAIC,EAAO,IAAI5F,KAEf,OADA4F,EAAKjC,QAAiB,IAATgC,GACP,GAAN,OAAUC,EAAKC,WAAf,YAA6BD,EAAKE,aAAlC,YAAkDF,EAAKG,eA0C3CC,EAvCe,SAACC,EACAC,EACAlB,EACAG,EACAD,GAE5B,OAAO,SAAA/D,GACHgF,IACKC,IAAIF,GACJG,MAAK,SAAAC,GACF,OAASA,EAASV,QAErBS,MAAK,SAAAT,GAiBF,OAhBgB,MAAbA,EAAKW,KACJvB,GAA8B,GAC9BG,EAA6C,IAC7ChE,EAAS,CAAEnD,KJvBG,oBIuBsBM,QAAS,CACrC+F,KAAMuB,EAAKrF,KACX8E,QAAQO,EAAKY,IAAInB,QACjBC,QAAShF,EAAQsF,EAAKY,IAAIlB,SAC1BC,OAAQjF,EAAQsF,EAAKY,IAAIjB,QACzBC,SAAUI,EAAKa,KAAKjB,SACpBC,KAAMiB,KAAKC,MAAMf,EAAKa,KAAKhB,KAAO,UAG1CT,GAA8B,GAC9BE,EAAsB,4BACtB/D,EAAS,CAACnD,KJlCI,oBIkCmBM,QAAQ8G,KAEtCQ,KAEVgB,OAAO,SAAApC,GACJqC,QAAQC,IAAItC,GACbQ,GAA8B,GAC7BE,EAAsB,4BACtB/D,EAAS,CAACnD,KJ1CQ,oBI0CeM,QAAQ8G,SCzCxC2B,EAJG,CAChB,SAAU,OAAQ,SAAU,QAAS,QACrC,MAAM,WAAY,QAAQ,UCDdC,EADA,mCCYVC,E,2MAEFtC,cAAgB,SAAAuC,GACZ,EAAKxF,MAAMyD,6CAA6C+B,I,EAG5DC,cAAgB,WAGZ,GAFA,EAAKzF,MAAMwD,sBAAsB,KAE7B,EAAKxD,MAAM6C,YAAYK,uBAAuB/C,OAAQ,OAAO,EAEjE,IAAIuF,EAAYL,EAAYM,QAAQ,SAAAC,GAChC,OAASA,EAAGC,gBAAkB,EAAK7F,MAAM6C,YAAYK,uBAAuB/C,OAAO0F,iBAEvF,GAAGH,EAAUzK,OAAO,CAChB,EAAK+E,MAAMsD,+BAA8B,GAEzC,IAAIiB,EAAcmB,EAAU,GACtBlB,EAAQ,4DAC2CD,EAD3C,kBACgEe,GAE9E,EAAKtF,MAAMsE,sBACPC,EACAC,EACA,EAAKxE,MAAMsD,8BACX,EAAKtD,MAAMyD,6CACX,EAAKzD,MAAMwD,4BAIf,EAAKxD,MAAMwD,sBAAsB,sB,wEAIrC,OACK,kBAAC,EAAD,CACIN,uBAAwB5C,KAAKN,MAAM6C,YAAYK,uBAC/CC,cAAe7C,KAAKN,MAAM6C,YAAYM,cACtCH,WAAY1C,KAAKmF,cACjBxC,cAAe3C,KAAK2C,oB,GAvCHzC,aA0DlBC,oBAdhB,SAA4BJ,GAC1B,MAAO,CACLwC,YAAaxC,EAAMwC,gBAGvB,SAA6BpD,GAC7B,OAAOiB,YAAmB,CACtB4C,gCACAE,wBACAC,+CACAa,yBACI7E,KAGQgB,CAA8C8E,G,0BC/C/CO,OAnBf,YAA+D,IAAxCpD,EAAuC,EAAvCA,QAAU1H,EAA6B,EAA7BA,UAAYmI,EAAiB,EAAjBA,cACzC,OACI,yBAAK7H,UAAU,gBACRN,GACC,kBAAC,WAAD,KACI,+CACE0H,EAAQC,MAAQ,wCAAeD,EAAQC,KAAvB,IAAgCD,EAAQiB,SACxDjB,EAAQqB,MAAQ,2CAAkBrB,EAAQqB,MACzCrB,EAAQkB,SAAW,uCAAclB,EAAQkB,QAAtB,KACnBlB,EAAQmB,QAAU,sCAAcnB,EAAQmB,OAAtB,KACnBnB,EAAQoB,UAAY,wCAAepB,EAAQoB,SAAvB,MAG5BX,GAAiB,2BAAG,yBAAKxB,MAAQ,CAACC,MAAM,OAAQmE,OAAO,QAAUC,IAAKC,KAAQC,IAAK,gBACnFlL,GAAa,2BAAKA,KCd1BmL,G,iLAEE,OACK,kBAAC,GAAD,CACIhD,cAAe7C,KAAKN,MAAMmD,cAC1BnI,UAAWsF,KAAKN,MAAMhF,UACtB0H,QAASpC,KAAKN,MAAM6C,YAAYH,c,GANdlC,aAiBnBC,oBAPhB,SAA4BJ,GAC1B,MAAO,CACLwC,YAAaxC,EAAMwC,YACnB7H,UAAWqF,EAAMwC,YAAYC,MAC7BK,cAAe9C,EAAMwC,YAAYM,iBAGrB1C,CAAyB0F,ICD1BC,GAdM,WACjB,OACI,yBAAK9K,UAAU,8BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,eACX,uDACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,U,+CCaL+K,I,YAvBE,SAAC,GAAmB,IAAlBnC,EAAiB,EAAjBA,KAAOoC,EAAU,EAAVA,KAEtB,OACI,yBAAKhL,UAAU,YACZ,4BAAM4I,EAAKqC,MAAMC,UAChB,6BACMtC,EAAKuC,eACP,yBACIT,IAAK9B,EAAKuC,cAAcC,cAAcC,MAAMC,OAAOC,WAClDX,IAAG,eAGZ,6BACI,0CAAiBI,EAAKzH,KAAO,0BAAMwC,GAAE,iBAAYiF,EAAKjF,KAAQiF,EAAKzH,MAAgB,WACnF,0CAAe,8BAAQqF,EAAK4C,MAA5B,MAEJ,yBAAMC,wBAAyB,CAACC,OAAO9C,EAAK+C,QAAQT,YAEpD,kBAAC,IAAD,CAASzF,GAAE,gBAAWmD,EAAK7C,IAAM/F,UAAS,mBAA1C,oCACA,uBAAGiG,KAAM2C,EAAKgD,MAAd,4BCmCGC,GArDE,SAAC,GAAsD,IAArDjD,EAAoD,EAApDA,KAAOkD,EAA6C,EAA7CA,0BAA2BC,EAAkB,EAAlBA,aAKjD,OACI,yBAAK/L,UAAS,YAEN4I,EAAKoD,iBACD,6BAAOpD,EAAKoD,kBAEZpD,EAAKqD,kBACD,yBAAKjM,UAAS,0BACV,yBAAK0K,IAAKwB,KAAWtB,IAAI,gBAG7B,yBAAK5K,UAAU,YACX,oCACA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,UACX,4BAAQwG,QApBlB,WACtBsF,KAmBoE9L,UAAU,mBAA9C,gBAIF4I,EAAKuD,UAAUvM,KAAK,SAACC,GAExB,IAAIuM,EAAkBvM,EAAQwM,OAC1BC,EAAc,GAEb,IAAK,IAAIvM,KAAOgM,EAAc,CACzB,IAAIf,EAAOe,EAAahM,GACtBqM,IAAoBpB,EAAKjF,KACxBuG,EAActB,GAItB,OACI,yBAAKjL,IAAKF,EAAQkG,GAAI/F,UAAU,4BAC5B,kBAAC,GAAD,CACI4I,KAAO/I,EACPmL,KAAMsB,aC5BpDC,GAAS,CACXC,QAAS,CACL,gBAXU,SAAWC,KAAKC,+BAyElBC,GAxDZ,SAACC,EAA2BC,GAK5B,OAHAD,GAA2B,GAC3BC,EAA0B,IAElB,SAAA1I,GACJgF,IAAMC,IChCmB,uEDgCEmD,IACtBlD,MAAK,SAAAyD,GACF,OAAQA,EAAIlE,QAEfS,MAAM,SAAAT,GA2BJ,OAzBwB,yCAAG,iCAAAmE,EAAA,sDAClBC,EAAc,GADI,KAAAD,EAAA,iBAGdE,GAHc,gBAAAF,EAAA,yDAKlBC,EAAW,sBAAQA,GAAR,CAAsBpE,EAAKqE,MACnCrE,EAAKqE,GAAGC,OAAO,oBANA,uBAOVC,EAAqBvE,EAAKqE,GAAGC,OAAO,oBAAoB,GAAGjH,KAPjD,SASXkD,IAAMC,IAAI+D,GACR9D,MAAM,SAAA+D,GAEH,OADAJ,EAAYC,GAAG9B,cAAiBiC,EAAOxE,KAChCwE,EAAOxE,QAEjBgB,OAAO,SAAApC,GACJqC,QAAQC,IAAItC,EAAQ,gBACpBwF,EAAYC,GAAG9B,eAAgB,KAhBzB,6BAmBd6B,EAAYC,GAAG9B,eAAgB,EAnBjB,0CAGd8B,EAAE,EAHY,YAGTA,EAAGrE,EAAKjJ,QAHC,yCAGdsN,GAHc,eAGOA,IAHP,+CAuBdD,GAvBc,2CAAH,oDAyBhBK,MAEVhE,MAAM,SAAAT,GAIH,OAHAgE,GAA2B,GAC3BC,EAA0B,IAEnBjE,KAEVS,MAAM,SAAAT,GACHzE,EAAS,CAACnD,KExEO,iBFwEcM,QAAQ,YAAKsH,QAE/CgB,OAAO,SAAApC,GACLqC,QAAQC,IAAI,kBAAmBtC,GAC/BqF,EAA0B,mBAC1BD,GAA2B,GAC3BzI,EAAS,CAACnD,KE9EQ,iBF8EcM,QAAQ,UGrEvCuL,GAPkB,SAAAS,GAE9B,MAAO,CACHtM,KDHiC,yBCIjCM,QAASgM,ICGDV,GAPmB,SAAAX,GAE/B,MAAO,CACHjL,KFJiC,2BEKjCM,QAAS2K,ICKbsB,GAAY,SAAWd,KAAK9K,4BAmChB6L,GAlCgB,WAE5B,OAAQ,SAAArJ,GACJgF,IJbuB,uEIenB,CAEIqD,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,eAAmBe,MAa1BlE,MAAM,SAAAyD,GACH,IAAIlE,EAAOkE,EAAIlE,KAEf,OADAzE,EAAS,CAACnD,KCrCI,gBDqCkBM,QAASsH,IAClCA,KAEVgB,OAAQ,SAAApC,GACLrD,EAAS,CAACnD,KCzCI,gBDyCkBM,QAAS,KACzCuI,QAAQC,IAAItC,QEjCtBiG,G,2MAkDDC,6B,wBAA+B,uBAAAX,EAAA,sEAEtB,EAAKrI,MAAMiI,uBAAuBgB,KAAlC,gBAED,EAAKjJ,MAAMkI,2BACX,EAAKlI,MAAMmI,0BAHV,GAFsB,uBAQtB,EAAKnI,MAAM8I,yBARW,2C,mFAL5BxI,KAAKN,MAAMkJ,aAAazB,UAAUxM,OAAS,GAC3CqF,KAAK0I,iC,+BAkBD,OACK,kBAAC,GAAD,cACI5B,0BAA2B9G,KAAK0I,6BAChC3B,aAAc/G,KAAKN,MAAMqH,aACzBnD,KAAO5D,KAAKN,MAAMkJ,cAHtB,eAImB5I,KAAKN,MAAMqH,mB,GArEf7G,aAyFhBC,gBAhBQ,SAAAJ,GACtB,MAAO,CACH6I,aAAe7I,EAAM6I,aACrB7B,aAAchH,EAAMgH,iBAGE,SAAA5H,GACxB,OACEiB,YAAmB,CACfuH,0BACAC,8BACAC,6BACAW,2BACDrJ,KAGOgB,CAA6CsI,ICjD7CI,I,MA5CO,SAAC,GAAmC,IAAhCC,EAA+B,EAA/BA,SAAW/B,EAAoB,EAApBA,aAE9BgC,EAAU,SAAUC,EAAOC,GAC/B,IAAIjD,GAAO,EACX,IAAIgD,IAAUC,GAASA,EAAMtO,OAAS,IAAMqO,EAAKjI,GAC7C,OAAO,EAGX,IAAK,IAAIhG,KAAOkO,EACTA,EAAMlO,IACFkO,EAAMlO,GAAKgG,KAAOiI,EAAK3B,SACtBrB,EAAOiD,EAAMlO,IAKzB,OAAOiL,GACT2C,U,EAAYG,EAAW/B,GAErB,OAAY+B,GAAYA,EAAS/H,GACrB,yBAAK/F,UAAU,kBACT8N,EAAS7C,OAAU,4BAAM6C,EAAS7C,MAAMC,UAC1C,6BACM4C,EAAS3C,eACX,yBACIT,IAAKoD,EAAS3C,cAAcC,cAAcC,MAAMC,OAAOC,WACvDX,IAAG,eAGX,6BACI,iDAAsB,8BAAQmD,IAAYA,IAAUxK,KAAO,YAC3D,0CAAe,8BAAQuK,EAAStC,KAAjB,OAEjBsC,EAASI,SAAa,yBAAMzC,wBAAyB,CAACC,OAAQoC,EAASI,QAAQhD,YACjF,uBAAGjF,KAAM6H,EAASlC,MAAlB,yBACA,kBAAC,IAAD,CAASnG,GAAI,SAAUzF,UAAS,mBAAhC,oBAER,yBAAKA,UAAS,SACV,kBAAC,IAAD,CAASyF,GAAG,SAASzF,UAAS,wBAA9B,+BCrCVmO,G,YACF,WAAYzJ,GAAQ,IAAD,8BACf,4CAAMA,KAIV0J,UAAY,WAOR,OANYC,OAAOC,SAASC,SACPC,MAAM,KACKnE,QAAQ,SAAAxK,GACpC,OAASA,GAAc4O,OAAO5O,GAAW,KAE3B,IAXH,EAenB6O,QAAU,SAAA3I,GACN,GAAI,EAAKrB,MAAMkJ,aAAa5B,iBACxB,OAAQ,EAEhB,IAAI2C,EAAU,EAAKjK,MAAMkJ,aAAazB,UAAU9B,QAAQ,SAAAxK,GACpD,OAAUA,EAAQkG,KAAO0I,OAAO1I,MAGnC,OAAO4I,EAAQhP,OAAS,EAAIgP,EAAQ,GAAK,IArBtC,EAAK5J,MAAQ,CAAEiJ,KAAK,IAFL,E,sEA4Bf,OACE,kBAAC,GAAD,CACIF,SAAU9I,KAAK0J,QAAQ1J,KAAKoJ,aAC5BrC,aAAc/G,KAAKN,MAAMqH,mB,GAhCD7G,aA4CvBC,gBANS,SAAAJ,GACpB,MAAO,CACH6I,aAAe7I,EAAM6I,aACrB7B,aAAchH,EAAMgH,gBAGb5G,CAAyBgJ,I,iBClBzBS,GAvBF,WACT,OACI,yBAAK5O,UAAU,QACX,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO2D,KAAI,IAAO6B,OAAK,EAAEqJ,OAAS,SAAAnK,GAC/B,OAAO,kBAAC,EAAD,SAGV,kBAAC,KAAD,CAAOf,KAAI,QAAW6B,OAAK,EAAEqJ,OAAS,SAAAnK,GACnC,OAAO,kBAAC,GAAD,SAEV,kBAAC,KAAD,CAAOf,KAAI,YAAiBkL,OAAS,SAAAnK,GACjC,OAAO,kBAAC,GAAD,SAGX,kBAAC,KAAD,CAAOf,KAAI,WAAgBkL,OAAS,SAAAnK,GAChC,OAAO,kBAAC,GAAD,YCdrBoK,G,4LAGE,GAAG9J,KAAKN,MAAMxE,aAAawB,WACvB,OAAO,EAEZsD,KAAKN,MAAMzC,wBAAwB+C,KAAKN,MAAMxC,oBACzC8C,KAAKN,MAAMxE,gB,+BAIf,OACI,yBAAKF,UAAU,OACX,gCACI,kBAAC,EAAD,OAEJ,8BACI,kBAAC,GAAD,OAEJ,+BACI,kBAAC,EAAD,OAEJ,gCACI,kBAAC,EAAD,Y,GAvBFkF,aA0CDC,gBAZO,SAAAJ,GACpB,MAAO,CACH7E,aAAe6E,EAAM7E,iBAGF,SAAAiE,GAC3B,OAAOiB,YAAmB,CACtBnD,0BACAC,uBACDiC,KAGcgB,CAA6C2J,ICzC1CC,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAASxM,MACvB,2DCTW,ICNXyM,GAAe,CACjB9C,UAAU,GACVF,mBAAmB,EACnBD,iBAAkB,ICMLkD,GANWC,YAAiB,CACzC5H,YFEa,WAAmD,IAAxCxC,EAAuC,uDAA9B2D,EAAsB0G,EAAQ,uCAChE,OAAQA,EAAOpO,MACZ,I1BXiC,yB0BY9B,OAAO,eAAK+D,EAAZ,CAAoB8C,cAAeuH,EAAO9N,UAE7C,I1Bb4B,oB0BczB,OAAO,eAAKyD,EAAZ,CAAmByC,MAAO4H,EAAO9N,UAEpC,I1BfuD,+C0BgBpD,OAAO,eAAKyD,EAAZ,CAAoB6C,uBAAwBwH,EAAO9N,UAEtD,I1BjB4B,oB0BkBzB,OAAO,eAAKyD,EAAZ,CAAoBqC,QAASgI,EAAO9N,UAEvC,QACG,OAAOyD,IEhBZ7E,aCCa,WAAmD,IAAxC6E,EAAuC,uDAA/BtD,EAAuB2N,EAAQ,uCACjE,OAAQA,EAAOpO,MACX,IlDXqB,akDYlB,OAAO,eAAM+D,EAAb,GAAuBqK,EAAO9N,SACjC,IlDZsB,ckDab,OAAOG,EAChB,IlDX0B,kBkDYtB,OAAO,eAAMsD,EAAb,CAAqBrE,WAAY0O,EAAO9N,UAC5C,IlDfkC,2BkDgB9B,OAAO,eAAKyD,EAAZ,CAAoBnE,MAAOwO,EAAO9N,UACtC,IlDhBqC,8BkDiBjC,OAAO,eAAMyD,EAAb,CAAqB7D,SAAUkO,EAAO9N,UAC3C,QACG,OAAOyD,IDbX6I,aDDa,WAA2C,IAAhC7I,EAA+B,uDAAvBkK,GAAeG,EAAQ,uCACzD,OAAQA,EAAOpO,MACX,IZV2B,iBYWvB,OAAO,eAAK+D,EAAZ,CAAoBoH,UAAWiD,EAAO9N,UAC1C,IZXmC,2BYY/B,OAAO,eAAKyD,EAAZ,CAAoBkH,kBAAmBmD,EAAO9N,UAClD,IZZmC,yBYa/B,OAAO,eAAMyD,EAAb,CAAqBiH,iBAAkBoD,EAAO9N,UACnD,QACG,OAAOyD,ICPXgH,aERa,WAAiC,IAAtBhH,EAAqB,uDAAb,GAAKqK,EAAQ,uCAC/C,OAAQA,EAAOpO,MACX,IXJwB,gBWKrB,OAAO,eAAM+D,EAAb,GAAuBqK,EAAO9N,SAClC,QACG,OAAOyD,M,SCDEsK,GAFHC,YAAYJ,GAAqBK,YAAgBC,O,wBCU/DC,IAASZ,OACL,kBAAC,IAAD,CAAUQ,MAAOA,IACb,kBAAC,IAAD,KACC,kBAAC,GAAD,QAGL/M,SAASoN,eAAe,SP+GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdnG,OAAM,SAAApC,GACLqC,QAAQrC,MAAMA,EAAMwI,c","file":"static/js/main.bebdd8c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.18be94cf.gif\";","import React from 'react';\r\nimport './index.css';\r\n\r\nconst  LoginFormError =( { errorData } ) =>{\r\n    if(!errorData.length){\r\n        return  \"\";\r\n    }else{\r\n        return (\r\n             errorData.map( (element , index)=>{\r\n                return    <div key={index} className=\"text-danger\">{ element }</div>\r\n                })\r\n        );\r\n    }\r\n\r\n\r\n};\r\nexport default LoginFormError;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport LoginFormError from \"./LoginFormError\";\r\nconst  LoginForm =( { userAuthData,\r\n                         setNewLoginString ,\r\n                         setNewPasswordString,\r\n                         setLogin,\r\n                         validateError,\r\n\r\n} ) =>{\r\n\r\n    const handlerLoginSubmit = event =>{\r\n        event.preventDefault();\r\n        setLogin();\r\n    };\r\n\r\n    const handlerLoginChange = event=>{\r\n        let newLogin = event.target.value;\r\n        setNewLoginString(newLogin);\r\n    };\r\n    const handlerPasswordChange = event =>{\r\n        let newPassword = event.target.value;\r\n        setNewPasswordString(newPassword);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handlerLoginSubmit} className=\"p-1\">\r\n            {/*{ userAuthData.loginError &&*/}\r\n            {/*<LoginFormError  errorData={ [ userAuthData.loginError ] } />}*/}\r\n            <LoginFormError  errorData={ [ ...validateError , userAuthData.loginError ]}/>\r\n            <input value={ userAuthData.login } onChange={ handlerLoginChange } className=\"dropdown-item form-control\" type='text' placeholder=\"login\" />\r\n            <input value={ userAuthData.password } onChange={ handlerPasswordChange } className=\"dropdown-item form-control\" type='password' placeholder=\"password\" />\r\n            <div className=\"dropdown-divider\"></div>\r\n            <button className=\" btn btn-success\">\r\n                Вход\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\nexport default LoginForm;\r\n","import  {CHANGE_USER_LOGIN_STRING} from \"../../constants/userAuth/userAuthSetActionType\";\r\n\r\nconst changeUserLoginStringAction = newUserNameString =>{\r\n\r\n    return {\r\n        type: CHANGE_USER_LOGIN_STRING,\r\n        payload: newUserNameString,\r\n    };\r\n};\r\nexport  default changeUserLoginStringAction;\r\n","export  const LOGIN_USER = \"LOGIN_USER\";\r\nexport  const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const CHANGE_USER_LOGIN_STRING = \"CHANGE_USER_LOGIN_STRING\";\r\nexport const CHANGE_USER_PASSWORD_STRING = \"CHANGE_USER_PASSWORD_STRING\";\r\nexport  const SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\n","import  {CHANGE_USER_PASSWORD_STRING} from \"../../constants/userAuth/userAuthSetActionType\";\r\n\r\nconst changeUserPasswordStringAction =  newUserPasswordString =>{\r\n\r\n    return {\r\n        type: CHANGE_USER_PASSWORD_STRING,\r\n        payload: newUserPasswordString,\r\n    };\r\n};\r\nexport  default changeUserPasswordStringAction;\r\n","export  const  userAuthInitialState= {\r\n    login: '' ,\r\n    password: \"\",\r\n    isUserAuth: false,\r\n    userName:'',\r\n    confirmPassword: '',\r\n    email: '',\r\n    userRole: '',\r\n    authToken: '',\r\n    loginError: '',\r\n};\r\n","import  { LOGIN_USER } from \"../../constants/userAuth/userAuthSetActionType\";\r\nimport { set_cookie, get_cookie } from \"../../../helpers/cookie/cookies_fun\";\r\nimport { userAuthInitialState } from \"../../initialState/UserAuthInitialState\";\r\n\r\n// real auth data for site\r\n// const userName = 'aleksey34';\r\n// const userPassword = '@ENqWEXsxZZw1g*au)';\r\n\r\nconst demoUserAuthData = {\r\n    login: 'user' ,\r\n    password: \"123\",\r\n    isUserAuth: true,\r\n    userName:'USER',\r\n    confirmPassword: '',\r\n    email: 'test@inbox.ru',\r\n    userRole: '',\r\n    authToken: '1111111111',\r\n    loginError: '',\r\n};\r\n\r\nconst asyncSetUserLoginAction = (setLoginErrorAction ,userAuthData) =>{\r\n    setLoginErrorAction(\"\");\r\n\r\n    let userAuthDataJson = get_cookie('userAuthData');\r\n\r\n    let login = '';\r\n    let password ='';\r\n\r\n    if(userAuthDataJson){\r\n        let userAuthDataObj  = JSON.parse(userAuthDataJson);\r\n\r\n        login = userAuthDataObj.login ? userAuthDataObj.login : '';\r\n        password = userAuthDataObj.password ? userAuthDataObj.password : \"\";\r\n\r\n    }else{\r\n        login = userAuthData.login;\r\n        password =  userAuthData.password;\r\n    }\r\n        if(login && password){\r\n\r\n            // get demoUserAuthData if it is success\r\n\r\n            let demoUser = false;\r\n            // check for example - like server\r\n            if(login === demoUserAuthData.login &&\r\n                password === demoUserAuthData.password){\r\n                demoUser = demoUserAuthData;\r\n            }\r\n            // check end\r\n            if(!demoUser){\r\n              //  setLoginErrorAction(\"Error of Auth\");\r\n                return dispatch => {\r\n                    dispatch({type: LOGIN_USER, payload: { ...userAuthInitialState, loginError: \"Error of Auth\" } })\r\n                }\r\n            }else {\r\n                let current_date = new Date;\r\n                let cookie_year = current_date.getFullYear();\r\n                let cookie_month = current_date.getMonth();\r\n                let cookie_day = current_date.getDate() + 2;// save for 2 day - change how you need//\r\n\r\n                set_cookie(\"userAuthData\", JSON.stringify(demoUser), cookie_year, cookie_month, cookie_day);\r\n\r\n                return dispatch => {\r\n                    dispatch({type: LOGIN_USER, payload: { ...demoUser , isUserAuth: true } })\r\n                }\r\n            }\r\n        } else{\r\n            return dispatch => {\r\n                dispatch({type: LOGIN_USER, payload: userAuthInitialState})\r\n            }\r\n      }\r\n};\r\nexport  default asyncSetUserLoginAction;\r\n","export const set_cookie = function  ( name, value, exp_y, exp_m, exp_d, path, domain, secure )\r\n{\r\n    var cookie_string = name + \"=\" + escape ( value );\r\n\r\n    if ( exp_y )\r\n    {\r\n        var expires = new Date ( exp_y, exp_m, exp_d );\r\n        cookie_string += \"; expires=\" + expires.toGMTString();\r\n    }\r\n\r\n    if ( path )\r\n        cookie_string += \"; path=\" + escape ( path );\r\n\r\n    if ( domain )\r\n        cookie_string += \"; domain=\" + escape ( domain );\r\n\r\n    if ( secure )\r\n        cookie_string += \"; secure\";\r\n\r\n    document.cookie = cookie_string;\r\n};\r\nexport  const  delete_cookie = function  ( cookie_name )\r\n{\r\n    var cookie_date = new Date ( );  // Текущая дата и время\r\n    cookie_date.setTime ( cookie_date.getTime() - 1 );\r\n    document.cookie = cookie_name += \"=; expires=\" + cookie_date.toGMTString();\r\n};\r\nexport  const get_cookie = function( cookie_name )\r\n{\r\n    var results = document.cookie.match ( '(^|;) ?' + cookie_name + '=([^;]*)(;|$)' );\r\n\r\n    if ( results )\r\n        return ( unescape ( results[2] ) );\r\n    else\r\n        return null;\r\n};\r\n\r\n// let current_date = new Date;\r\n// let cookie_year = current_date.getFullYear ( ) ;\r\n// let cookie_month = current_date.getMonth ( );\r\n// let cookie_day = current_date.getDate ( ) + 2;// save for 2 day - change how you need//\r\n","import  {SET_LOGIN_ERROR} from \"../../constants/userAuth/userAuthSetActionType\";\r\n\r\nconst setLoginErrorAction = loginError =>{\r\n\r\n    return {\r\n        type: SET_LOGIN_ERROR,\r\n        payload: loginError,\r\n    };\r\n};\r\nexport  default setLoginErrorAction;\r\n","export  const validateStr = (str , fieldTitle='field', min=3, max=12 )=>{\r\n    if (str.length < 3) {\r\n        return  `${fieldTitle} less then ${min} letters` ;\r\n    }else{\r\n        if(str.length > 12){\r\n            return   `${fieldTitle} more then ${max} letters` ;\r\n        }else{\r\n            return '';\r\n        }\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport LoginForm from \"../../../components/auth/LoginForm\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport changeUserLoginStringAction from \"../../../store/actions/userAuth/changeUserLoginStringAction\";\r\nimport changeUserPasswordStringAction from \"../../../store/actions/userAuth/changeUserPasswordStringAction\";\r\nimport asyncSetUserLoginAction from \"../../../store/actions/userAuth/asyncSetUserLoginAction\";\r\nimport setLoginErrorAction from \"../../../store/actions/userAuth/setLoginErrorAction\";\r\nimport { validateStr } from \"../../../helpers/validate/validateStr\";\r\n\r\nclass LoginFormContainer extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loginError: '',\r\n            passwordError: '',\r\n        }\r\n    }\r\n\r\n    // validateStr = (str , min , max)=>{\r\n    //     if (str.length < 3) {\r\n    //         return  `Login less then ${min} letters` ;\r\n    //     }else{\r\n    //         if(str.length > 12){\r\n    //            return   `Login more then ${max} letters` ;\r\n    //         }else{\r\n    //             return '';\r\n    //         }\r\n    //     }\r\n    // };\r\n\r\n    setNewLoginString =  newUserLoginString =>{\r\n            this.setState({loginError: `${validateStr(newUserLoginString, 'Login' , 3 , 12)}` });\r\n\r\n       this.props.changeUserLoginStringAction(newUserLoginString.trim());\r\n    } ;\r\n\r\n    setNewPasswordString = newUserPasswordString =>{\r\n        this.setState({ passwordError: `${validateStr(newUserPasswordString, \"Password\",3 , 12)}` });\r\n\r\n        this.props.changeUserPasswordStringAction(newUserPasswordString.trim());\r\n    };\r\n\r\n    setLogin = ()=>{\r\n\r\n        if(this.props.userAuthData.isUserAuth ){\r\n            return false;\r\n        }\r\n        if(this.state.loginError || this.state.passwordError ){\r\n            return  false;\r\n        }\r\n\r\n        this.props.asyncSetUserLoginAction(this.props.setLoginErrorAction ,\r\n            this.props.userAuthData);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <LoginForm\r\n                userAuthData={this.props.userAuthData}\r\n                setNewLoginString={this.setNewLoginString}\r\n                setNewPasswordString={this.setNewPasswordString}\r\n                setLogin={this.setLogin}\r\n                setLogout={this.setLogout}\r\n                validateError={ [this.state.loginError , this.state.passwordError]}\r\n            />\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return{\r\n        userAuthData: state.userAuthData\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\nreturn bindActionCreators( {\r\n    changeUserLoginStringAction,\r\n    changeUserPasswordStringAction,\r\n    asyncSetUserLoginAction,\r\n    setLoginErrorAction,\r\n},dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);\r\n","import React from 'react';\r\nimport './index.css';\r\nfunction RegisterForm(  ) {\r\n    const handlerRegisterSubmit = event=>{\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handlerRegisterSubmit} className=\"p-2\">\r\n            <input className=\"dropdown-item form-control\" type='text'  placeholder=\"login\"/>\r\n            <input className=\"dropdown-item form-control\" type='text'   placeholder=\"Name\"/>\r\n            <input className=\"dropdown-item form-control\" type='email'  placeholder=\"Email\"/>\r\n            <input className=\"dropdown-item form-control\" type='password'  placeholder=\"password\" />\r\n            <div className=\"dropdown-divider\"></div>\r\n            <button className=\"btn btn-success\" >\r\n                Зарегистрироваться\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from \"../../../components/auth/RegisterForm\";\r\nfunction RegisterFormContainer(  ) {\r\n    return (\r\n       <RegisterForm/>\r\n    );\r\n}\r\nexport default RegisterFormContainer;\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LoginFormContainer from \"../../containers/auth/LoginFormContainer\";\r\nimport RegisterFormContainer from \"../../containers/auth/RegisterFormContainer\";\r\nimport './index.css';\r\n\r\nfunction Navbar( { userAuthData , setLogout} ) {\r\n\r\n    const handlerClickLogout = ()=>{\r\n        setLogout();\r\n    };\r\n\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <NavLink className=\"navbar-brand active\" exact to=\"/\">Main</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to={`/`}  exact activeClassName=\"active\" className=\"nav-link\" >Front Page</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" >\r\n                            <NavLink to={`/blog/`}  exact activeClassName=\"active\" className=\"nav-link\" >Blog</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\" >\r\n                            <NavLink to={`/weather/`}   activeClassName=\"active\" className=\"nav-link\" >Weather</NavLink>\r\n                        </li>\r\n\r\n                        { !userAuthData.isUserAuth &&\r\n                        <>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Войти\r\n                            </a>\r\n                            <div className=\"dropdown-menu auth-dropdown-menu\"  aria-labelledby=\"navbarDropdown\">\r\n                            <LoginFormContainer/>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Регистрация\r\n                            </a>\r\n                            <div className=\"dropdown-menu auth-dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <RegisterFormContainer/>\r\n                            </div>\r\n                        </li>\r\n                        </>}\r\n\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Enter\r\n                            </a>\r\n                            <div style={ {width:\"300px\"} } className=\"dropdown-menu auth-dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                <div   className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                                                <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link active\" id=\"login-tab\" data-toggle=\"tab\" href=\"#login\"\r\n                                                       role=\"tab\" aria-controls=\"login\" aria-selected=\"true\">Login</a>\r\n                                                </li>\r\n                                                <li className=\"nav-item\">\r\n                                                    <a className=\"nav-link\" id=\"logup-tab\" data-toggle=\"tab\" href=\"#logup\"\r\n                                                       role=\"tab\" aria-controls=\"logup\" aria-selected=\"false\">Logup</a>\r\n                                                </li>\r\n                                            </ul>\r\n                                            <div className=\"tab-content\" id=\"myTabContent\">\r\n                                                <div className=\"tab-pane fade show active\" id=\"login\" role=\"tabpanel\"\r\n                                                     aria-labelledby=\"login-tab\">\r\n                                                    <LoginFormContainer/>\r\n                                                </div>\r\n                                                <div className=\"tab-pane fade\" id=\"logup\" role=\"tabpanel\"\r\n                                                     aria-labelledby=\"logup-tab\">\r\n                                                    <RegisterFormContainer/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <div>\r\n                       <span className=\"navbar-login-name\">\r\n                           { (userAuthData.isUserAuth && userAuthData.userName) &&\r\n                           <>\r\n                               <span>{ userAuthData.userName }</span>\r\n                               <i onClick={handlerClickLogout} className=\"navbar-btn-logout pl-2 fas fa-sign-out-alt\"></i>\r\n                           </>\r\n                           }\r\n\r\n                       </span>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;\r\n","import  { LOGOUT_USER } from \"../../constants/userAuth/userAuthSetActionType\";\r\nimport { delete_cookie } from \"../../../helpers/cookie/cookies_fun\";\r\n\r\nconst asyncSetLogoutUserAction =  () =>{\r\n    delete_cookie('userAuthData');\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: true,\r\n    };\r\n};\r\nexport  default asyncSetLogoutUserAction;\r\n","import React , { Component }  from 'react';\r\nimport Navbar from \"../../components/Navbar\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport asyncSetLogoutUserAction from \"../../store/actions/userAuth/asyncSetLogoutUserAction\";\r\n\r\n\r\nclass NavbarContainer extends Component{\r\n\r\n    setLogout = ()=>{\r\n        this.props.asyncSetLogoutUserAction();\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Navbar\r\n                userAuthData={this.props.userAuthData}\r\n                setLogout={this.setLogout}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\nreturn {\r\n    userAuthData: state.userAuthData,\r\n};\r\n};\r\nconst mapDispatchToProps = dispatch =>{\r\n    return bindActionCreators( {\r\n        asyncSetLogoutUserAction,\r\n    },dispatch);\r\n};\r\n\r\nexport default  connect(mapStateToProps , mapDispatchToProps )(NavbarContainer);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport NavbarContainer from \"../../../containers/NavbarContainer\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <NavbarContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            this is Footer\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\" Sidebar\">\r\n            this is Sidebar\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\n\r\nconst  FrontPage = () => {\r\n    return (\r\n        <div className=\"FrontPage\">\r\n            <h1>this is front page</h1>\r\n        </div>\r\n    );\r\n};\r\nexport default FrontPage;\r\n","import React from 'react';\r\nimport './index.css';\r\nfunction Info( { weather , errorData } ) {\r\n    return (\r\n        <div className=\"Info\">\r\n            <h2>Приложение Погода</h2>\r\n             { (weather.city && !errorData )  &&  <div> <h4>Узнайте погоду в городе: { weather.city }</h4></div> }\r\n            { errorData && <div> <h4>{ errorData }</h4></div>  }\r\n        </div>\r\n    );\r\n}\r\nexport default Info;\r\n","import React , { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Info from \"../../components/Info\";\r\n\r\nclass InfoContainer extends Component{\r\n\r\n    render(){\r\n        return(\r\n             <Info\r\n                 errorData={this.props.errorData}\r\n                 weather={this.props.weatherData.weather} />\r\n        );\r\n    };\r\n}\r\nfunction  mapStateToProps ( state ) {\r\n  return {\r\n    weatherData: state.weatherData,\r\n    errorData: state.weatherData.error,\r\n  };\r\n}\r\nexport default  connect(mapStateToProps)(InfoContainer);\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nconst FormCities = (\r\n    {\r\n        setWeather ,\r\n        setCityString ,\r\n        currentQueryCityString,\r\n        isDataLoading,\r\n    } ) =>{\r\n    const handlerGetWeather = (event)=>{\r\n        event.preventDefault();\r\n        //     event.target.elements.city.value =\r\n        //         event.target.elements.city.value.trim();\r\n        if(!isDataLoading){\r\n            setWeather();\r\n            event.target.elements.city.value= currentQueryCityString;\r\n        }\r\n\r\n    };\r\n    const handlerChangeQueryCity = event =>{\r\n        setCityString(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"FormCities\">\r\n            <h4>Выберете город</h4>\r\n            <form onSubmit={handlerGetWeather} className='w-50 p-3 mx-auto'>\r\n                <input disabled={isDataLoading}  value={currentQueryCityString} onChange={handlerChangeQueryCity} type=\"text\" name='city' placeholder='Введите город' className='form-control'/>\r\n                <button disabled={isDataLoading} className=\"d-block ml-auto my-3  btn btn-success\">Получить погоду</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default FormCities;\r\n","import  { SET_WEATHER_IS_LOADING }  from \"../../constants/weather/weatherSetActionType\";\r\nconst setWeatherIsLoadingDataAction =  isLoadingData =>{\r\n\r\n    return {\r\n        type: SET_WEATHER_IS_LOADING,\r\n        payload: isLoadingData,\r\n    };\r\n};\r\nexport  default  setWeatherIsLoadingDataAction;\r\n","export  const SET_WEATHER_IS_LOADING = \"SET_WEATHER_IS_LOADING\";\r\nexport  const SET_WEATHER_ERROR = \"SET_WEATHER_ERROR\";\r\nexport  const SET_WEATHER_CHANGE_CURRENT_QUERY_CITY_STRING = \"SET_WEATHER_CHANGE_CURRENT_QUERY_CITY_STRING\";\r\nexport  const SET_WEATHER_ASYNC = \"SET_WEATHER_ASYNC\";\r\n","import  { SET_WEATHER_ERROR }  from \"../../constants/weather/weatherSetActionType\";\r\nconst setWeatherErrorAction =  errorData =>{\r\n\r\n    return {\r\n        type: SET_WEATHER_ERROR,\r\n        payload: errorData,\r\n    };\r\n};\r\nexport  default  setWeatherErrorAction;\r\n","import  { SET_WEATHER_CHANGE_CURRENT_QUERY_CITY_STRING }  from \"../../constants/weather/weatherSetActionType\";\r\nconst setWeatherChangeCurrentQueryCityStringAction =  currentQueryCityString =>{\r\n\r\n    return {\r\n        type: SET_WEATHER_CHANGE_CURRENT_QUERY_CITY_STRING,\r\n        payload: currentQueryCityString,\r\n    };\r\n};\r\nexport  default setWeatherChangeCurrentQueryCityStringAction;\r\n","export let emptyWeatherData ={\r\n    city: '',\r\n    country:'',\r\n    sunrise: '' ,\r\n    sunset: '',\r\n    pressure: '',\r\n    temp: '',\r\n} ;\r\nexport const WeatherInitialState = {\r\n    weather: emptyWeatherData,\r\n    error: '',\r\n    isDataLoading: false,\r\n    currentQueryCityString: ''\r\n};\r\n\r\n//export   WeatherInitialState;\r\n","import  { SET_WEATHER_ASYNC }  from \"../../constants/weather/weatherSetActionType\";\r\nimport { emptyWeatherData } from \"../../initialState/WeatherinitialState\";\r\nimport axios from \"axios\";\r\n\r\nconst  getDate = timeData =>{\r\n    let data = new Date();\r\n    data.setTime(timeData*1000);// seconds to milliseconds\r\n    return `${data.getHours()}:${data.getMinutes()}:${data.getSeconds()}`;\r\n};\r\n\r\nconst asyncSetWeatherAction =  (currentCity,\r\n                                queryUrl ,\r\n                                setWeatherIsLoadingDataAction,\r\n                                setWeatherChangeCurrentQueryCityStringAction,\r\n                                setWeatherErrorAction\r\n                                ) =>{\r\n    return dispatch => {\r\n        axios\r\n            .get(queryUrl)\r\n            .then(response => {\r\n                return   response.data;\r\n            })\r\n            .then(data=>{\r\n                if(data.cod === 200){\r\n                    setWeatherIsLoadingDataAction(false);\r\n                    setWeatherChangeCurrentQueryCityStringAction('');\r\n                    dispatch({ type: SET_WEATHER_ASYNC, payload: {\r\n                            city: data.name,\r\n                            country:data.sys.country,\r\n                            sunrise: getDate(data.sys.sunrise) ,\r\n                            sunset: getDate(data.sys.sunset) ,\r\n                            pressure: data.main.pressure,\r\n                            temp: Math.round(data.main.temp - 273.),\r\n                        } });\r\n                }else{\r\n                    setWeatherIsLoadingDataAction(false);\r\n                    setWeatherErrorAction('Something is going wrong');\r\n                    dispatch({type:SET_WEATHER_ASYNC,payload:emptyWeatherData });\r\n                }\r\n                return data;\r\n            })\r\n            .catch( error=>{\r\n                console.log(error);\r\n               setWeatherIsLoadingDataAction(false);\r\n                setWeatherErrorAction('Something is going wrong');\r\n                dispatch({type:SET_WEATHER_ASYNC,payload:emptyWeatherData});\r\n            });\r\n    };\r\n};\r\nexport default  asyncSetWeatherAction;\r\n","const CITIES_LIST = [\r\n    'Moscow', \"Kiev\", \"London\", \"Paris\", \"Praga\",\r\n    \"Rom\",\"New York\", \"Minsk\",\"Odessa\"\r\n];\r\nexport  default  CITIES_LIST;\r\n","const API_KEY = '82b797b6ebc625032318e16f1b42c016';\r\nexport  default API_KEY;\r\n","import React , { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormCities from \"../../components/FormCities\";\r\nimport setWeatherIsLoadingDataAction from \"../../store/actions/weather/setWeatherIsLoadingDataAction\";\r\nimport setWeatherErrorAction from \"../../store/actions/weather/setWeaterErrorAction\";\r\nimport setWeatherChangeCurrentQueryCityStringAction\r\n    from \"../../store/actions/weather/setWeatherChangeCurrentQueryCityStringAction\";\r\nimport asyncSetWeatherAction from \"../../store/actions/weather/asyncSetWeatherAction\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport CITIES_LIST from \"../../data/cities/citiesList\";\r\nimport API_KEY from \"../../data/auth/weatherKey\";\r\n\r\nclass FormCitiesContainer extends Component{\r\n\r\n    setCityString = cityNameString=>{\r\n        this.props.setWeatherChangeCurrentQueryCityStringAction(cityNameString)\r\n    };\r\n\r\n    setWeatherApi = () =>{\r\n        this.props.setWeatherErrorAction('');\r\n\r\n        if(!this.props.weatherData.currentQueryCityString.trim()) return false;\r\n\r\n        let existCity = CITIES_LIST.filter( el=>{\r\n            return   el.toUpperCase() === this.props.weatherData.currentQueryCityString.trim().toUpperCase();\r\n        } );\r\n        if(existCity.length){\r\n            this.props.setWeatherIsLoadingDataAction(true);\r\n\r\n            let currentCity = existCity[0];\r\n            const queryUrl =\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${currentCity}&appid=${API_KEY}`;\r\n\r\n            this.props.asyncSetWeatherAction(\r\n                currentCity,\r\n                queryUrl ,\r\n                this.props.setWeatherIsLoadingDataAction,\r\n                this.props.setWeatherChangeCurrentQueryCityStringAction,\r\n                this.props.setWeatherErrorAction\r\n            );\r\n\r\n        }else{\r\n            this.props.setWeatherErrorAction('City is not found');\r\n        }\r\n};\r\n    render(){\r\n        return(\r\n             <FormCities\r\n                 currentQueryCityString={this.props.weatherData.currentQueryCityString}\r\n                 isDataLoading={this.props.weatherData.isDataLoading}\r\n                 setWeather={this.setWeatherApi}\r\n                 setCityString={this.setCityString}/>\r\n        );\r\n    };\r\n}\r\n\r\nfunction  mapStateToProps ( state ) {\r\n  return {\r\n    weatherData: state.weatherData,\r\n  };\r\n}\r\nfunction  mapDispatchToProps(dispatch) {\r\nreturn bindActionCreators({\r\n    setWeatherIsLoadingDataAction,\r\n    setWeatherErrorAction,\r\n    setWeatherChangeCurrentQueryCityStringAction,\r\n    asyncSetWeatherAction\r\n    } , dispatch\r\n);\r\n}\r\nexport default  connect(mapStateToProps , mapDispatchToProps)(FormCitiesContainer);\r\n","import React, { Fragment} from 'react';\r\nimport Loader from \"../../assets/images/loader.gif\";\r\nimport './index.css';\r\n\r\nfunction WeatherInfo({ weather , errorData , isDataLoading }) {\r\n    return (\r\n        <div className=\"WeatherInfo\">\r\n            { !errorData &&\r\n                <Fragment>\r\n                    <p>info of the city</p>\r\n                    { weather.city && <p>Location: { weather.city }.{ weather.country }</p>}\r\n                    { weather.temp && <p>temperature: { weather.temp }</p> }\r\n                    {  weather.sunrise && <p>sunrise: { weather.sunrise } </p> }\r\n                    {  weather.sunset && <p>sunset: {  weather.sunset } </p> }\r\n                    { weather.pressure && <p>pressure: { weather.pressure } </p> }\r\n                </Fragment>\r\n            }\r\n            { isDataLoading && <p><img style={ {width:'35px', height:\"35px\"} } src={Loader} alt={'loading...'}/></p> }\r\n            { errorData && <p>{ errorData }</p> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherInfo;\r\n","import React , { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport WeatherInfo from \"../../components/WeatherInfo\";\r\n\r\nclass WeatherInfoContainer extends Component{\r\n    render(){\r\n        return(\r\n             <WeatherInfo\r\n                 isDataLoading={this.props.isDataLoading}\r\n                 errorData={this.props.errorData}\r\n                 weather={this.props.weatherData.weather} />\r\n        );\r\n    };\r\n}\r\nfunction  mapStateToProps ( state ) {\r\n  return {\r\n    weatherData: state.weatherData,\r\n    errorData: state.weatherData.error,\r\n    isDataLoading: state.weatherData.isDataLoading,\r\n  };\r\n}\r\nexport default  connect(mapStateToProps)(WeatherInfoContainer);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport InfoContainer from \"../../../containers/InfoContainer\";\r\nimport FormCitiesContainer from \"../../../containers/FormCitiesContainer\";\r\nimport WeatherInfoContainer from \"../../../containers/WeatherInfoContainer\";\r\n\r\nconst  WeatherPage = () => {\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-12\">\r\n                <div className=\"WeatherPage\">\r\n                    <h1>this is page of weather</h1>\r\n                    <InfoContainer/>\r\n                    <FormCitiesContainer/>\r\n                    <WeatherInfoContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default WeatherPage;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { NavLink} from \"react-router-dom\";\r\n\r\nconst BlogPost = ({data , user}) => {\r\n\r\n    return (\r\n        <div className=\"BlogPage\">\r\n           <h1>{ data.title.rendered }</h1>\r\n            <div>\r\n                { data.thumbnailData &&\r\n                <img\r\n                    src={data.thumbnailData.media_details.sizes.medium.source_url}\r\n                     alt={`thumbnail`}/>\r\n                }\r\n            </div>\r\n            <div>\r\n                <div>posted by { user.name ? <span id={`userId_${user.id}`}>{ user.name }</span> : 'unknown'  }</div>\r\n                <div>posted on <span>{ data.date}</span> </div>\r\n            </div>\r\n            <div  dangerouslySetInnerHTML={{__html:data.excerpt.rendered }}>\r\n            </div>\r\n            <NavLink to={`/blog/${data.id}`} className={`btn btn-success`} >link to all post -- read more...</NavLink>\r\n            <a href={data.link}>Go to original source</a>\r\n        </div>\r\n    );\r\n};\r\nexport default BlogPost;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport BlogPost from \"../../BlogPost\";\r\nimport imgLoader from \"./../../../assets/images/loader.gif\";\r\n\r\nconst BlogPage = ({data , getUpdateUsersAndPostData, allUsersData}) => {\r\n    const handlerUpdatePage = ()=>{\r\n        getUpdateUsersAndPostData();\r\n    };\r\n\r\n    return (\r\n        <div className={`BlogPage`}>\r\n            {\r\n                data.postLoadingError ?\r\n                    <div>{ data.postLoadingError }</div>\r\n                    :\r\n                    data.isPostDataLoading ?\r\n                        <div className={`blogPostLoadingWrapper`}>\r\n                            <img src={imgLoader} alt=\"loading...\"/>\r\n                        </div>\r\n                        :\r\n                        <div className=\"BlogPage\">\r\n                            <h1>Blog</h1>\r\n                            <div className=\"container\">\r\n                                <div className=\"row justify-content-center\">\r\n                                    <div className=\"col-12\">\r\n                                        <button onClick={handlerUpdatePage} className=\"btn btn-success\">\r\n                                            Update Page\r\n                                        </button>\r\n                                    </div>\r\n                                    { data.postsData.map( (element)=>{\r\n\r\n                                   let currentAuthorId = element.author;\r\n                                   let currentUser = {};\r\n\r\n                                        for (let key in allUsersData) {\r\n                                             let user = allUsersData[key];\r\n                                            if(currentAuthorId === user.id){\r\n                                                currentUser = user;\r\n                                            }\r\n                                        }\r\n\r\n                                        return (\r\n                                            <div key={element.id} className=\"col-12 col-md-6 col-lg-4\">\r\n                                                <BlogPost\r\n                                                    data={ element }\r\n                                                    user={currentUser}\r\n                                                />\r\n                                            </div>\r\n                                        ) ;\r\n                                    } )   }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default BlogPage;\r\n","import { GET_BLOG_POSTS } from \"../../constants/blog/blogPostActionType\";\r\nimport { ENDPOINT_POSTS } from \"../../constants/endPoints\";\r\nimport axios from 'axios';\r\n\r\n// real auth data for site\r\n//  const username = 'aleksey34';\r\n//  const password = '@ENqWEXsxZZw1g*au)';\r\n const username = 'aleksey3400';\r\n const password = '12345jp12345';\r\nconst basicAuth = 'Basic ' + btoa(username + ':' + password);\r\n// const realUserAuthData= {\r\n   // username: 'aleksey34' , password: \"@ENqWEXsxZZw1g*au)\"\r\n//};\r\n// const axiosAuthParam = {\r\n//     auth:realUserAuthData,\r\n// } ;\r\n//\"Accept\": \"application/json\",\r\n// \"Content-Type\": \"application/json\",\r\nconst config = {\r\n    headers: {\r\n        'Authorization': + basicAuth,\r\n    }\r\n};\r\n\r\n\r\nconst asyncSetBlogPostAction =\r\n    (setIsPostDataLoadingAction,setPostLoadingErrorAction) =>{\r\n\r\n    setIsPostDataLoadingAction(true);\r\n    setPostLoadingErrorAction(\"\");\r\n\r\n    return  dispatch =>{\r\n        axios.get(ENDPOINT_POSTS , config )\r\n            .then(res => {\r\n                return  res.data;\r\n            })\r\n            .then( data=>{\r\n\r\n                const getAdditionalData = async ()=>{\r\n                    let queryResult = [];\r\n\r\n                    for(let i=0; i< data.length; i++){\r\n\r\n                        queryResult = [ ...queryResult , data[i] ];\r\n                        if(data[i]._links['wp:featuredmedia']){\r\n                            let queryPathThumbnail = data[i]._links['wp:featuredmedia'][0].href;\r\n\r\n                        await  axios.get(queryPathThumbnail)\r\n                                .then( result=>{\r\n                                    queryResult[i].thumbnailData =  result.data;\r\n                                    return result.data;\r\n                                } )\r\n                                .catch( error=>{\r\n                                    console.log(error , 'error server');\r\n                                    queryResult[i].thumbnailData = false;\r\n                                })\r\n                        }else{\r\n                            queryResult[i].thumbnailData = false;\r\n                        }\r\n\r\n                    }\r\n                    return  queryResult;\r\n                };\r\n               return  getAdditionalData();\r\n            } )\r\n            .then( data =>{\r\n                setIsPostDataLoadingAction(false);\r\n                setPostLoadingErrorAction(\"\");\r\n\r\n                return data;\r\n            } )\r\n            .then( data=>{\r\n                dispatch({type: GET_BLOG_POSTS,payload: [...data]});\r\n            })\r\n            .catch( error=>{\r\n               console.log('error of server', error);\r\n               setPostLoadingErrorAction(\"Error of server\");\r\n               setIsPostDataLoadingAction(false);\r\n               dispatch({type: GET_BLOG_POSTS, payload:[] })\r\n            });\r\n    };\r\n};\r\nexport  default asyncSetBlogPostAction;\r\n","export  const ENDPOINT_POSTS =   \"http://growthsystem-el-pro-1.k19471t7.beget.tech/wp-json/wp/v2/posts\";\r\nexport  const ENDPOINT_BASE_URL = \"http://growthsystem-el-pro-1.k19471t7.beget.tech/wp-json/wp/v2\";\r\nexport  const ENDPOINT_USERS = \"http://growthsystem-el-pro-1.k19471t7.beget.tech/wp-json/wp/v2/users\"\r\n","export  const  GET_BLOG_POSTS =  \"GET_BLOG_POSTS\";\r\nexport  const SET_IS_POST_DATA_LOADING = \"SET_IS_POST_DATA_LOADING\";\r\nexport  const SET_POST_LOADING_ERROR   = \"SET_POST_LOADING_ERROR\";\r\n","import { SET_POST_LOADING_ERROR } from \"../../constants/blog/blogPostActionType\";\r\n\r\nconst setPostLoadingErrorAction = postLoadingErrorString =>{\r\n\r\n    return {\r\n        type: SET_POST_LOADING_ERROR,\r\n        payload: postLoadingErrorString,\r\n    };\r\n};\r\nexport  default setPostLoadingErrorAction;\r\n","import { SET_IS_POST_DATA_LOADING } from \"../../constants/blog/blogPostActionType\";\r\n\r\nconst setIsPostDataLoadingAction = isPostDataLoading =>{\r\n\r\n    return {\r\n        type: SET_IS_POST_DATA_LOADING,\r\n        payload: isPostDataLoading,\r\n    };\r\n};\r\nexport  default setIsPostDataLoadingAction;\r\n","import {  SET_ALL_USERS} from \"../../constants/users/usesActionType\";\r\nimport { ENDPOINT_USERS } from \"../../constants/endPoints\";\r\nimport axios from 'axios';\r\n\r\n// real auth data for site\r\n// and real data more\r\n// username = 'aleksey3400 password='12345jp12345'\r\nconst userName = 'aleksey3400';\r\nconst userPassword = '12345jp12345';\r\n// const userName = 'aleksey34';\r\n// const userPassword = '@ENqWEXsxZZw1g*au)';\r\nlet basicAuth = 'Basic ' + btoa(userName + ':' + userPassword);\r\nconst asyncSetAllUsersAction =  () =>{\r\n\r\n    return  dispatch=>{\r\n        axios(\r\n            ENDPOINT_USERS ,\r\n            {\r\n               // withCredentials: true,\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    'Authorization': + basicAuth\r\n                }\r\n             }\r\n           //  ,\r\n           // {\r\n            // auth:{\r\n            //     username: userName,\r\n            //     password: userPassword\r\n            // },\r\n            // headers: { 'Authorization': + basicAuth },\r\n\r\n      //  }\r\n        )\r\n            .then( res=>{\r\n                let data = res.data;\r\n                dispatch({type: SET_ALL_USERS , payload: data});\r\n                return data;\r\n            })\r\n            .catch(  error=>{\r\n                dispatch({type: SET_ALL_USERS , payload: []});\r\n                console.log(error);\r\n            })\r\n    };\r\n};\r\nexport  default asyncSetAllUsersAction;\r\n","export  const SET_ALL_USERS = 'SET_ALL_USERS';\r\n","import React, {Component} from 'react';\r\nimport BlogPage from \"../../../components/pages/BlogPage\";\r\nimport { connect } from  'react-redux';\r\nimport { bindActionCreators} from \"redux\";\r\nimport asyncSetBlogPostAction from \"../../../store/actions/blogPost/asyncSetBlogPostAction\";\r\nimport setPostLoadingErrorAction from \"../../../store/actions/blogPost/setIsPostLoadingErrorAction\";\r\nimport setIsPostDataLoadingAction from \"../../../store/actions/blogPost/setIsPostDataLoadingAction\";\r\nimport asyncSetAllUsersAction from \"../../../store/actions/users/asyncSetAllUsersAction\";\r\n\r\nclass BlogPageContainer extends Component{\r\n\r\n    componentDidMount() {\r\n        // const username = 'aleksey3400';\r\n        // const password = '12345jp12345';\r\n        // const basicAuth = 'Basic ' + btoa(username + ':' + password);\r\n        //\r\n        // const myHeaders = new Headers();\r\n        // myHeaders.append(\"Authorization\", basicAuth);\r\n        // myHeaders.append('Content-Type', 'application/json');\r\n        // myHeaders.append('Accept', 'application/json');\r\n        // myHeaders.append(\"Accept\", \"/\");\r\n        // myHeaders.append(\"Connection\", \"keep-alive\");\r\n\r\n       //  myHeaders.append(\"Access-Control-Allow-Origin\", \"http://localhost:3000\");\r\n        // myHeaders.append(\"Access-Control-Allow-Credentials\", 'true');\r\n        //  myHeaders.append(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\r\n\r\n      //  myHeaders.append(\"Authorization\", \"Bearer MLDRJK4VrUCk4XLxyMVWLYhLGTBu0XXk\");\r\n\r\n       // myHeaders.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\r\n\r\n      //  myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\r\n       // Access-Control-Allow-Origin:  http://127.0.0.1:3000\r\n           // Access-Control-Allow-Methods: POST\r\n      //  Access-Control-Allow-Headers: Content-Type, Authorization\r\n    //    myHeaders.append(\"Access-Control-Allow-Origin\", \"http://127.0.0.1:3000\");\r\n      //  myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\r\n\r\n        // const requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: myHeaders,\r\n\r\n        //   mode: 'cors',\r\n         //   credentials:\"include\", // Вот, что нужно задать\r\n\r\n        //   redirect: 'follow'\r\n     //   };\r\n\r\n        // fetch(\"http://growthsystem-el-pro-1.k19471t7.beget.tech/wp-json/wp/v2/posts/1/\", requestOptions)\r\n        //     .then(response => response.json())\r\n        //     .then(result => console.log(result))\r\n        //     .catch(error => console.log('error', error));\r\n\r\n\r\n    if( this.props.blogPostData.postsData.length < 1){\r\n        this.getWpApiUsersAndBlogPostData();\r\n      }\r\n    }\r\n\r\n     getWpApiUsersAndBlogPostData = async ()=>{\r\n         // update blog posts\r\n     await    this.props.asyncSetBlogPostAction.bind(\r\n             this,\r\n             this.props.setIsPostDataLoadingAction,\r\n             this.props.setPostLoadingErrorAction )();\r\n\r\n         // update list Users\r\n     await    this.props.asyncSetAllUsersAction();\r\n\r\n     };\r\n\r\n        render() {\r\n\r\n            return (\r\n                 <BlogPage\r\n                     getUpdateUsersAndPostData={this.getWpApiUsersAndBlogPostData}\r\n                     allUsersData={this.props.allUsersData}\r\n                     data={ this.props.blogPostData }\r\n                     allUsersData={ this.props.allUsersData }/>\r\n            );\r\n        }\r\n}\r\nconst mapStateToProps = state =>{\r\n  return {\r\n      blogPostData:  state.blogPostData,\r\n      allUsersData: state.allUsersData,\r\n  }\r\n};\r\nconst  mapDispatchToProps = dispatch=>{\r\n    return (\r\n      bindActionCreators({\r\n          asyncSetBlogPostAction,\r\n          setIsPostDataLoadingAction,\r\n          setPostLoadingErrorAction,\r\n          asyncSetAllUsersAction,\r\n      }, dispatch)\r\n    );\r\n};\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(BlogPageContainer);\r\n","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './index.css';\r\n\r\n\r\nconst BlogSinglePost = ( { postData , allUsersData } ) => {\r\n\r\n const  getUser = function (post , users){\r\n    let user = false;\r\n    if(!post  || !users || users.length < 1 || !post.id){\r\n        return false;\r\n    }\r\n\r\n    for (let key in users) {\r\n        if(users[key] ){\r\n            if(users[key].id === post.author){\r\n                user = users[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return user;\r\n}.bind(this , postData , allUsersData);\r\n\r\n    return (  ( postData && postData.id )  ?\r\n                <div className=\"BlogSinglePage\">\r\n                    { postData.title &&  <h1>{ postData.title.rendered }</h1> }\r\n                    <div>\r\n                        { postData.thumbnailData &&\r\n                        <img\r\n                            src={postData.thumbnailData.media_details.sizes.medium.source_url}\r\n                            alt={`thumbnail`}/>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <div>posted by author <span>{ getUser() ? getUser().name : \"unknown\" }</span></div>\r\n                        <div>posted on <span>{ postData.date } </span></div>\r\n                    </div>\r\n                    { postData.content &&   <div  dangerouslySetInnerHTML={{__html: postData.content.rendered }}></div>}\r\n                    <a href={postData.link}>Go to original source</a>\r\n                    <NavLink to={\"/blog/\"} className={`btn btn-success`} >Go back to Blog</NavLink>\r\n                </div> :\r\n            <div className={` py-5`}>\r\n                <NavLink to=\"/blog/\" className={`my-5 btn btn-success`}>\r\n                    The content is not found\r\n                </NavLink>\r\n            </div>\r\n    );\r\n};\r\nexport default  BlogSinglePost;\r\n","import React, {Component} from 'react';\r\nimport BlogSinglePost from \"../../../components/pages/BlogSinglePost\";\r\nimport { connect }  from  'react-redux';\r\n//import axios from  'axios';\r\n\r\n\r\nclass BlogSinglePostContainer extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { post:{} };\r\n    }\r\n\r\n    getPostId = ()=>{\r\n        let query = window.location.pathname;\r\n        let queryArr = query.split('/');\r\n       let  queryArrFiltered = queryArr.filter( element=>{\r\n            return   element &&   (Number(element) > 0);\r\n        });\r\nlet id = queryArrFiltered[0];\r\n        return  id;\r\n    };\r\n\r\n    getPost = id=>{\r\n        if( this.props.blogPostData.postLoadingError ){\r\n            return  false;\r\n        }\r\n    let postArr = this.props.blogPostData.postsData.filter( element=>{\r\n        return    element.id === Number(id);\r\n    } );\r\n\r\n     return postArr.length > 0 ? postArr[0] : [];\r\n    };\r\n\r\n    render() {\r\n     //  this.props.match.params.id;\r\n        return (\r\n          <BlogSinglePost\r\n              postData={this.getPost(this.getPostId())}\r\n              allUsersData={this.props.allUsersData}\r\n          />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return {\r\n        blogPostData:  state.blogPostData,\r\n        allUsersData: state.allUsersData,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(BlogSinglePostContainer);\r\n","import React from 'react';\r\nimport FrontPage from \"../../pages/FrontPage\";\r\nimport WeatherPage from \"../../pages/WeatherPage\";\r\nimport BlogPageContainer from \"../../../containers/blog/BlogPageContainer\";\r\nimport BlogSinglePostContainer from \"../../../containers/blog/BlogSinglePostContainer\";\r\n\r\nimport './index.css';\r\nimport { Route , Switch  } from  \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"Main\">\r\n            <Switch>\r\n                <Route path={`/`} exact  render={ props=>{\r\n                   return <FrontPage/>\r\n                }  }/>\r\n\r\n                <Route path={`/blog`} exact  render={ props=>{\r\n                   return <BlogPageContainer/>\r\n                }  } />\r\n                <Route path={`/blog/:id`}   render={ props=>{\r\n                    return <BlogSinglePostContainer/>\r\n                }  } />\r\n\r\n                <Route path={`/weather`}   render={ props=>{\r\n                    return <WeatherPage/>\r\n                }  } />\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React , { Component } from 'react';\nimport './App.css';\nimport Header from \"./components/pages-part/Header\";\nimport Footer from \"./components/pages-part/Footer\";\nimport Sidebar from \"./components/pages-part/Sidebar\";\nimport Main from \"./components/pages-part/Main\";\nimport { connect }  from  'react-redux';\nimport { bindActionCreators } from \"redux\";\nimport asyncSetUserLoginAction from \"./store/actions/userAuth/asyncSetUserLoginAction\";\nimport setLoginErrorAction from \"./store/actions/userAuth/setLoginErrorAction\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        if(this.props.userAuthData.isUserAuth ){\n            return false;\n        }\n       this.props.asyncSetUserLoginAction(this.props.setLoginErrorAction ,\n            this.props.userAuthData);\n    }\n\n    render(){\n        return (\n            <div className=\"App\">\n                <header>\n                    <Header/>\n                </header>\n                <main>\n                    <Main/>\n                </main>\n                <aside>\n                    <Sidebar/>\n                </aside>\n                <footer>\n                    <Footer/>\n                </footer>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {\n        userAuthData : state.userAuthData\n    }\n};\nconst mapDispatchToProps = dispatch =>{\nreturn bindActionCreators({\n    asyncSetUserLoginAction,\n    setLoginErrorAction,\n}, dispatch);\n};\n\nexport default   connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import   { WeatherInitialState }   from \"../../initialState/WeatherinitialState/index\";\r\nimport {\r\n   SET_WEATHER_IS_LOADING,\r\n   SET_WEATHER_ERROR,\r\n   SET_WEATHER_CHANGE_CURRENT_QUERY_CITY_STRING,\r\n   SET_WEATHER_ASYNC,\r\n}\r\n   from \"../../constants/weather/weatherSetActionType\";\r\n\r\nexport  default  function ( state  = WeatherInitialState , action) {\r\n   switch (action.type) {\r\n      case SET_WEATHER_IS_LOADING:\r\n         return { ...state , isDataLoading: action.payload };\r\n\r\n      case SET_WEATHER_ERROR:\r\n         return { ...state, error: action.payload};\r\n\r\n      case SET_WEATHER_CHANGE_CURRENT_QUERY_CITY_STRING:\r\n         return  {...state , currentQueryCityString: action.payload};\r\n\r\n      case SET_WEATHER_ASYNC:\r\n         return { ...state , weather: action.payload  };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n\r\n}\r\n","import { GET_BLOG_POSTS ,\r\n    SET_IS_POST_DATA_LOADING,\r\n    SET_POST_LOADING_ERROR, } from \"../../constants/blog/blogPostActionType\";\r\nconst initialState = {\r\n    postsData:[],\r\n    isPostDataLoading: false ,\r\n    postLoadingError: '',\r\n};\r\nexport  default  function ( state = initialState , action) {\r\n  switch (action.type) {\r\n      case GET_BLOG_POSTS:\r\n          return { ...state , postsData: action.payload }  ;\r\n      case SET_IS_POST_DATA_LOADING:\r\n          return { ...state , isPostDataLoading: action.payload };\r\n      case SET_POST_LOADING_ERROR:\r\n          return  { ...state , postLoadingError: action.payload};\r\n     default:\r\n        return state;\r\n  }\r\n}\r\n","import  { combineReducers }  from  'redux';\r\n\r\nimport weatherReducer from \"./weatherReducer/weatherReducer\";\r\nimport userAuthReducer from \"./userAuthReducer/userAuthReducer\";\r\nimport blogPostReducer from \"./blogReducer/blogPostReducer\";\r\nimport usersReducer from \"./usersReducer/usersReducer\";\r\nconst combineReducersAll =  combineReducers( {\r\n    weatherData: weatherReducer,\r\n    userAuthData: userAuthReducer ,\r\n    blogPostData: blogPostReducer,\r\n    allUsersData: usersReducer,\r\n} );\r\nexport  default  combineReducersAll;\r\n","import { userAuthInitialState } from \"../../initialState/UserAuthInitialState\";\r\nimport {\r\n   LOGIN_USER ,\r\n   LOGOUT_USER,\r\n    CHANGE_USER_LOGIN_STRING,\r\n    CHANGE_USER_PASSWORD_STRING,\r\n    SET_LOGIN_ERROR,\r\n} from \"../../constants/userAuth/userAuthSetActionType\";\r\n\r\nexport  default  function ( state = userAuthInitialState , action) {\r\n  switch (action.type) {\r\n      case LOGIN_USER:\r\n         return  { ...state, ...action.payload } ;\r\n      case LOGOUT_USER:\r\n               return userAuthInitialState;\r\n      case  SET_LOGIN_ERROR:\r\n          return  { ...state , loginError: action.payload };\r\n      case  CHANGE_USER_LOGIN_STRING:\r\n          return { ...state , login: action.payload};\r\n      case CHANGE_USER_PASSWORD_STRING:\r\n          return {  ...state , password: action.payload};\r\n     default:\r\n        return state;\r\n  }\r\n}\r\n","import { SET_ALL_USERS } from \"../../constants/users/usesActionType\";\r\n\r\nexport  default  function ( state = [] , action) {\r\n  switch (action.type) {\r\n      case SET_ALL_USERS:\r\n         return  { ...state, ...action.payload } ;\r\n     default:\r\n        return state;\r\n  }\r\n}\r\n","import {applyMiddleware, createStore} from 'redux';\r\nimport combineReducersAll from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(combineReducersAll , applyMiddleware(thunk));\r\n\r\nexport  default  store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from  'react-redux';\nimport store from \"./store/store\";\nimport { BrowserRouter } from 'react-router-dom';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n    <Provider store={store} >\n        <BrowserRouter>\n         <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}